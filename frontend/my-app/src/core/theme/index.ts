import { DefaultTheme } from "styled-components";
import "@fontsource/roboto";
import lightmode from "../../assets/images/lightmode.jpg";
import "../googlematerial/colors/light.scss";

const LightTheme : DefaultTheme = {
    size: (value: number, sizeMultiplicator = 4) => {
        return value * sizeMultiplicator
    },

    typography: {
        heading: 'Roboto, sans-serif',
        body: 'Roboto, sans-serif',
    },

    themode: {
        primary: `$primary`,
        primaryText: `$primary`,
        onPrimary: `$on-primary`,
        onPrimaryText: `$on-primary`,
        primaryContainer: `$primary-container`,
        primaryContainerText: `$primary-container`,
        onPrimaryContainer: `$on-primary-container`,
        onPrimaryContainerText: `$on-primary-container`,
        secondary: `$secondary`,
        secondaryText: `$secondary`,
        onSecondary: `$on-secondary`,
        onSecondaryText: `$on-secondary`,
        secondaryContainer: `$secondary-container`,
        secondaryContainerText: `$secondary-container`,
        onSecondaryContainer: `$on-secondary-container`,
        onSecondaryContainerText: `$on-secondary-container`,
        tertiary: `$tertiary`,
        tertiaryText: `$tertiary`,
        onTertiary: `$on-tertiary`,
        onTertiaryText: `$on-tertiary`,
        tertiaryContainer: `$tertiary-container`,
        tertiaryContainerText: `$tertiary-container`,
        onTertiaryContainer: `$on-tertiary-container`,
        onTertiaryContainerText: `$on-tertiary-container`,
        error: `$error`,
        errorText: `$error`,
        onError: `$on-error`,
        onErrorText: `$on-error`,
        errorContainer: `$error-container`,
        errorContainerText: `$error-container`,
        onErrorContainer: `$on-error-container`,
        onErrorContainerText: `$on-error-container`,
        background: `$background`,
        backgroundText: `$background`,
        onBackground: `$on-background`,
        onBackgroundText: `$on-background`,
        surface: `$surface`,
        surfaceText: `$surface`,
        onSurface: `$on-surface`,
        onSurfaceText: `$on-surface`,
        surfaceVariant: `$surface-variant`,
        surfaceVariantText: `$surface-variant`,
        onSurfaceVariant: `$on-surface-variant`,
        onSurfaceVariantText: `$on-surface-variant`,
        outline: `$outline`,
        outlineText: `$outline`,
        inverseOnSurface: `$inverse-on-surface`,
        inverseOnSurfaceText: `$inverse-on-surface)`,
        inverseSurface: `$inverse-surface`,
        inverseSurfaceText: `$inverse-surface`,
        inversePrimary: `$inverse-primary`,
        inversePrimaryText: `$inverse-primary`,
        shadow: `$shadow`,
        shadowText: `$shadow`,
        surfaceTint: `$surface-tint`,
        surfaceTintText: `$surface-tint)`,
        outlineVariant: `$outline-variant`,
        outlineVariantText: `$outline-variant`,
        scrim: `$scrim`,
        scrimText: `$scrim`,
    },
    img: lightmode,
}

export default LightTheme